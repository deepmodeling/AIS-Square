# README

## Introduction

**Description**

This data set is generated with DPGEN [1,2],  a concurrent learning scheme that generates the DP training dataset iteratively.

The dataset contains basic "structure-energy-force-virial" data covering 53 typical metal elements that are usually adopted as matrixes (e.g. Al, Mg, Ti, Fe, etc.) or additives (e.g. rare earth elements) for alloys. Currently, we only take substitutional alloying elements into consideration. Those typical interstitial alloying elements (e.g. C, B, O, H) are not considered. The selected elements include Li, Na, K, Be, Mg, Ca, Sr, Sc, Y, La, Ti, Zr, Hf, V, Nb, Ta, Cr, Mo, W, Cu, Ag, Au, Zn, Cd, Mn, Re, Fe, Co, Ni, Os, Ir, Pt, Rh, Ru, Pd, Ce, Pr, Nd, Sm, Gd, Tb, Dy, Ho, Er, Tm, Lu, Al, Ga, In, Si, Ge, Sn, Pb. 

The dataset can be divided into two sets based on their generation process. The first set includes relaxed data and regularly deformed data, while the second set includes randomly distorted data generated by DP-GEN software. 

a) relaxed data and regularly deformed data

1) all the data generated during a DFT realization process

2) all the data generated during the calculation of EOS (equation of state)

3) all the data generated during the calculation of elastic constants

\* The structures include ~9000 intermetallic compounds and FCC, BCC and HCP structures of most metal elements

b)  randomly distorted data generated by DP-GEN software, the initial structures for DP-GEN iteration are:

1) FCC, BCC, HCP and amorphous structures of pure metals, with random vacancies in these structures

2) FCC, BCC, HCP and amorphous structures of random solid solutions, with random vacancies in these structures. During each iteration, the chemical composition of each structure is randomly generated.

3) intermetallic compounds

**DFT Settings**

The DFT calculations are computed by ABACUS software. The generalized gradient approximation (GGA) in the form of the Perdew–Burke–Ernzerhof (PBE) was used for the exchange–correlation functional. The pseudopotentials are selected from NCPP-PD04-PBE pseudopotentials and pseudopotentials proposed by the Rappe group (https://www.sas.upenn.edu/rappegroup/research/pseudo-potential-gga.html). The pseudopotentials are also uploaded as part of the dataset. The norm-conserving pseudopotentials are employed. The energy cutoff is set to 100 Ry. The K-points are set using the Monkhorst–Pack mesh with the spacing 0.05 1/a.u.. The electronic iteration convergence threshold was set to $$10^-6$$.  **No spin polarization is considered in the calculations.** A typical INPUT file for scf calculation is as follows.

```Plain
INPUT_PARAMETERS
calculation      scf
suffix           alloy
symmetry         0
dft_functional   pbe
ecutwfc          100.000000
scf_thr          1.000000e-06
scf_nmax         64
cal_force        1
cal_stress       1
basis_type       pw
smearing_method  mp
smearing_sigma   0.010000
mixing_type      pulay
mixing_beta      0.200000
mixing_gg0       1.5
ks_solver        dav
kspacing         0.050000
```

## Data Format

The directory tree is as follows:

```
sys_dir (optional)
-- train.txt
-- valid.txt
sys_dir_downstream (optional)
-- train.txt
-- valid.txt
*other_data_dirs
```

The dataset encompasses upstream and/or downstream splits, which are used for training DPA [3] models. Each system is represented as a single line in *.txt files in the DeePMD [4] format for training/validation. To obtain system paths from unstructured *$other\_data\_dirs$, one can refer to these *.txt files.

A pbc unit system in DeePMD format usually has the following substructure:

```
-- system
-- -- type_map.raw
-- -- type.raw
-- -- set.000/box.npy
-- -- set.000/coord.npy
-- -- set.000/energy.npy
-- -- set.000/force.npy
-- -- set.000/virial.npy
```

Format Description

| Name     | Property           | Raw file     | Unit | Shape                  | Description                                                  |
| -------- | ------------------ | ------------ | ---- | ---------------------- | ------------------------------------------------------------ |
| type     | Atom type indexes  | type.raw     |      | Natoms                 | Integers that start with 0, represent the atomic type corresponding to type_map.raw |
| type_map | Atom type names    | type_map.raw |      | Ntypes                 | Atom names that map to atom type, which is unnecessart to be contained in the periodic table |
| coord    | Atomic coordinates | coord.npy    | Å    | Nframes \* Natoms \* 3 | The atomic coordinates                                       |
| box      | Boxes              | box.npy      | Å    | Nframes \* 3 \* 3      | The box axes in the order `XX XY XZ YX YY YZ ZX ZY ZZ`       |
| energy   | Frame energies     | energy.npy   | eV   | Nframes                | The potential energy of snapshot                             |
| force    | Atomic forces      | force.npy    | eV/Å | Nframes \* Natoms \* 3 | The atomic forces                                            |
| virial   | Frame virial       | virial.npy   | eV   | Nframes * 9            | The virial frames are in the order `XX XY XZ YX YY YZ ZX ZY ZZ` |

Check [here](https://github.com/iProzd/deepmd-kit/blob/devel/doc/data/system.md) for more details.



## References

[1] Zhang, Linfeng, et al. "Active learning of uniformly accurate interatomic potentials for materials simulation." *Physical Review Materials* 3.2 (2019): 023804.

[2] Zhang, Yuzhi, et al. "DP-GEN: A concurrent learning platform for the generation of reliable deep learning based potential energy models." *Computer Physics Communications* 253 (2020): 107206.

[3] Zhang, Duo, et al. "DPA-1: Pretraining of Attention-based Deep Potential Model for Molecular Simulation." *arXiv preprint arXiv:2208.08236* (2022).

[4] Wang, Han, et al. "DeePMD-kit: A deep learning package for many-body potential energy representation and molecular dynamics." *Computer Physics Communications* 228 (2018): 178-184.
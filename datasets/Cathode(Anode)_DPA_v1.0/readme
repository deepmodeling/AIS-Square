# README

## Introduction

**Description**

The dataset is generated using DP-GEN[1,2], a concurrent learning scheme. After exploring O3 type layered oxide cathodes configurations for lithium-ion and sodium-ion batteries（derived from ~300 bulk systems), only a small portion (~107k configurations) of them are labeled then compose the compact dataset. The exploration runs in thirty systems, i.e., $$Li_xTMO_2,$$,$$Na_xTMO_2,$$ (TM=Ni,Mn,Fe,Co,Cr; x=0,0.5,1). Among them, the transition metal elements in the systems of $$FeO_2, LiMnO_2, LiNiO_2$$ $$NaMnO_2, $$ and $$NaNiO_2$$ exhibit the Jahn-Teller distortion effect under this valence state and are considered separately. The configuration space covers a temperature range around 50.0 K to 1250.0 K and a pressure range around 0 bar to 3000 bar. The total number of frames is 98,387.  

**DFT** 

All DFT calculations are performed with Vienna ab initio simulation package (VASP). The Perdew-Burke-Ernzerhof functional modified(PBE) within the generalized gradient approximation(GGA) is used as the exchange-correlation functional. Energy cutoff of the plane waves is chosen to be 520 eV and a k-point spacing of 0.25 have been set. The SCF convergence criterion of $$10^{-5}$$ is used. The U values employed in this work are U(Ni) = 6.0 eV, U(Mn) = 3.9 eV, U(Fe) = 4.0 eV, U(Co) = 3.4 eV, U(Cr) = 3.5 eV. All calculations are performed with a $$2\times2\times1$$ super cell containing twelve formula units for $$LiTMO_2,$$(12 Li, 12 TM and 24 O) and $$NaTMO_2,$$ (12 Na, 12 TM and 24 O) and  $$Li_{0.5}TMO_2,$$(6 Li, 12 TM and 24 O) and $$Na_{0.5}TMO_2,$$ (6Na, 12 TM and 24 O), $$TMO_2,$$(12 TM and 24 O),$$(TM=Ni,Mn,Fe,Co,Cr)$$.

## Data Format

The directory tree is as follows:

```
sys_dir (optional)
-- train.txt
-- valid.txt
sys_dir_downstream (optional)
-- train.txt
-- valid.txt
*other_data_dirs
```

The dataset encompasses upstream and/or downstream splits, which are used for training DPA [3] models. Each system is represented as a single line in *.txt files in the DeePMD [4] format for training/validation. To obtain system paths from unstructured *$other\_data\_dirs$, one can refer to these *.txt files.

A pbc unit system in DeePMD format usually has the following substructure:

```
-- system
-- -- type_map.raw
-- -- type.raw
-- -- set.000/box.npy
-- -- set.000/coord.npy
-- -- set.000/energy.npy
-- -- set.000/force.npy
-- -- set.000/virial.npy
```

Format Description

| Name     | Property           | Raw file     | Unit | Shape                  | Description                                                  |
| -------- | ------------------ | ------------ | ---- | ---------------------- | ------------------------------------------------------------ |
| type     | Atom type indexes  | type.raw     |      | Natoms                 | Integers that start with 0, represent the atomic type corresponding to type_map.raw |
| type_map | Atom type names    | type_map.raw |      | Ntypes                 | Atom names that map to atom type, which is unnecessart to be contained in the periodic table |
| coord    | Atomic coordinates | coord.npy    | Å    | Nframes \* Natoms \* 3 | The atomic coordinates                                       |
| box      | Boxes              | box.npy      | Å    | Nframes \* 3 \* 3      | The box axes in the order `XX XY XZ YX YY YZ ZX ZY ZZ`       |
| energy   | Frame energies     | energy.npy   | eV   | Nframes                | The potential energy of snapshot                             |
| force    | Atomic forces      | force.npy    | eV/Å | Nframes \* Natoms \* 3 | The atomic forces                                            |
| virial   | Frame virial       | virial.npy   | eV   | Nframes * 9            | The virial frames are in the order `XX XY XZ YX YY YZ ZX ZY ZZ` |

Check [here](https://github.com/iProzd/deepmd-kit/blob/devel/doc/data/system.md) for more details.



## References

[1] Zhang, Linfeng, et al. "Active learning of uniformly accurate interatomic potentials for materials simulation." *Physical Review Materials* 3.2 (2019): 023804.

[2] Zhang, Yuzhi, et al. "DP-GEN: A concurrent learning platform for the generation of reliable deep learning based potential energy models." *Computer Physics Communications* 253 (2020): 107206.

[3] Zhang, Duo, et al. "DPA-1: Pretraining of Attention-based Deep Potential Model for Molecular Simulation." *arXiv preprint arXiv:2208.08236* (2022).

[4] Wang, Han, et al. "DeePMD-kit: A deep learning package for many-body potential energy representation and molecular dynamics." *Computer Physics Communications* 228 (2018): 178-184.